{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","dateTimerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","Component","App","hasClock","timerId","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,YAAc,EALhB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAAcT,KAAKU,MAAnBD,UAER,OACGA,IAAcD,EAAUC,WAErBL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MArBlE,kCAyBE,WACEG,cAAcZ,KAAKD,eA1BvB,oBA6BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAcT,KAAKU,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YA1C3C,GAA2BO,aCDdC,EAAb,4MACEnB,MAAe,CACboB,UAAU,EACVP,UAAW,WAHf,EAMEQ,QAAU,EANZ,EAuBEC,cAAgB,WACd,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,IA1BpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEa,UAAU,OAG5BM,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CAAEa,UAAU,OAG5BhB,KAAKiB,QAAUhB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAW,EAAKS,oBAC/B,QApBP,oBA6BE,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,6CAECb,KAAKJ,MAAMoB,UAAY,cAAC,EAAD,CAAOP,UAAWT,KAAKJ,MAAMa,mBAlC7D,GAAyBK,aCNzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.577640e2.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  dateTimerId = 0;\n\n  componentDidMount() {\n    this.dateTimerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    return (\n      (clockName !== prevProps.clockName)\n      // eslint-disable-next-line no-console\n      && (console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`))\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dateTimerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}